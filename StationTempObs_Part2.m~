%% KDLTP, GracieCal,NBB

%% Load in a list of all 18 stations and their corresponding latitudes and longitudes
load GlobalStationsLatLon.mat

%% Calculate the linear temperature trends over the historical observation period for all 18 station
% You will do this using a similar approach as in Part 1 of this lab, but
% now implementing the work you did last week within a function that you
% can use to loop over all stations in the dataset

%Set the beginning year for the more recent temperature trend
recentYear = 1960; %you can see how your results change if you vary this value

%Initialize arrays to hold slope and intercept values calculated for all stations
p_all = NaN*zeros(length(sta),2); %example of how to do this for the full observational period
%<-- do the same thing just for values from RecentYear to today
p_recent = NaN*zeros(length(sta),2);
%Use a for loop to calculate the linear trend over both the full
%observational period and the time from RecentYear (i.e. 1960) to today
%using the function StationTempObs_LinearTrend
%<--
for i = 1:18
    [p_allFunct, p_recentFunct] = StationTempObs_LinearTrend(sta(1,i), recentYear)
    p_all(i,:) = p_allFunct
    p_recent(i,:) = p_recentFunct
end


%% Plot global maps of station locations
%Example code, showing how to plot the locations of all 18 stations
figure(1); clf
worldmap('World')
load coastlines
plotm(coastlat,coastlon)
plotm(lat,lon,'m.','markersize',15)
title('Locations of stations with observational temperature data')

%%
%Follow the model above, now using the function scatterm rather than plotm
%to plot symbols for all 18 stations colored by the rate of temperature
%change from RecentYear to present (i.e. the slope of the linear trendline)
%<--

figure(2); clf
worldmap('World')
load coastlines
plotm(coastlat,coastlon)
scatterm(lat,lon, 35 ,p_recent(:,1),'filled')
title('Temperature Trend 1960-present')
c = colorbar
c.Label.String = 'Temp (°C)'

%% Grace Extension

%Extension option: again using scatterm, plot the difference between the
%local rate of temperature change (plotted above) and the global mean rate
%of temperature change over the same period (from your analysis of the
%global mean temperature data in Part 1 of this lab).
%Data visualization recommendation - use the colormap "balance" from the
%function cmocean, which is a good diverging colormap option
%<--

figure(666); clf
worldmap('World')
load coastlines
plotm(coastlat,coastlon)
scatterm(lat,lon, 35 ,(p_recent(:,1)-(p1960(1,1))),'filled'))
title('Amomaly compared to 1960-Present Average')
c = colorbar
c.Label.String = 'Temp (°C)'



%% Now calculate the projected future rate of temperature change at each of these 18 stations
% using annual mean temperature data from GFDL model output following the
% A2 scenario (here you will call the function StationModelProjections,
% which you will need to open and complete)

%Use the function StationModelProjections to loop over all 18 stations to
%extract the linear rate of temperature change over the 21st century at
%each station
% Initialize arrays to hold all the output from the for loop you will write
% below
baseline_tuple = NaN*zeros(length(sta),2) %holds mean and std 
annualTempAnom_all = NaN*zeros(94,18) %hold all mean temp anomalies
P_linearTrend = NaN*zeros(length(sta),2) %holds the slope and y intercept
temp2006_all = NaN*zeros(length(sta),1) %holds all the temps of 2006

% Write a for loop that will use the function StationModelProjections to
% extract from the model projections for each station:
% 1) the mean and standard deviation of the baseline period
% (2006-2025) temperatures, 2) the annual mean temperature anomaly, and 3)
% the slope and y-intercept of the linear trend over the 21st century
%<-- [baseline_model, tempAnnMeanAnomaly, P] = outputs of projections
for i = 1:18
    %use temperary outputs to fill in the empty array at every loop
    [meanSTD, tempAnom, slopeInter, t2006] = StationModelProjections(sta(i))
    baseline_tuple(i,:) = meanSTD
    annualTempAnom_all(:,i) = tempAnom
    P_linearTrend(i,:) = slopeInter
    temp2006_all(i) = t2006
end

%% Plot a global map of the rate of temperature change projected at each station over the 21st century
%<--rate of temp change is equal to to slope of the linear trend stored in
%P_linearTrend
figure(3); clf
worldmap('World')
load coastlines
plotm(coastlat,coastlon)
scatterm(lat,lon, 35 ,P_linearTrend(:,1),'filled')
title('Rate of Temperature Change')
colormap (hot)
colorbar

%% Plot a global map of the interannual variability in annual mean temperature at each station
%as determined by the baseline standard deviation of the temperatures from
%2005 to 2025
%<--
figure(4); clf
worldmap('World')
load coastlines
plotm(coastlat,coastlon)
scatterm(lat,lon, 35 ,baseline_tuple(:,2),'filled')
title(' Interannual variability in annual mean temperature')
colormap (hot)
c = colorbar ; 
c.Label.String = 'Temp (°C)';

%% Calculate the time of emergence of the long-term change in temperature from local variability
%There are many ways to make this calcuation, but here we will compare the
%linear trend over time (i.e. the rate of projected temperature change
%plotted above) with the interannual variability in the station's
%temperature, as determined by the baseline standard deviation

%Calculate the year of long-term temperature signal emergence in the model
%projections, calculated as the time (beginning from 2006) when the linear
%temperature trend will have reached 2x the standard deviation of the
%temperatures from the baseline period
%<--
signalEmergence = NaN*zeros(length(sta),1)
for i = 1:18
    meanTemp2006 = temp2006_all(i)
    stationSTD = baseline_tuple(i,2)
    signalTemperature = meanTemp2006 + 2*stationSTD
    slope = P_linearTrend(i,1)
    intercept = P_linearTrend(i,2)
    signalYear = (signalTemperature-intercept)/slope
    
    signalEmergence(i) = signalYear
end 
%% Plot a global map showing the year of emergence
%<--
figure(5); clf
worldmap('World')
load coastlines
plotm(coastlat,coastlon)
scatterm(lat,lon, 35 ,signalEmergence,'filled')
title('Predicted time of signal emergence')
c = colorbar
c.Label.String = 'Year'